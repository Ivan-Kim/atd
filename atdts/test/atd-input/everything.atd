type kind = [
  | Root (* class name conflict *)
  | Thing of int
  | WOW <json name="wow">
  | Amaze <json name="!!!"> of string list
]

type root = {
  id <json name="ID">: string;
  items: int list list;
  ?maybe: int option;
  ~extras: int list;
  ~answer <ts default="42">: int;
  aliased: alias;
  point: (float * float);
  kinds: kind list;
  assoc1: (float * int) list;
(*
  assoc2: (string * int) list <json repr="object">;
  assoc3: (float * int) list <ts repr="dict">;
  assoc4: (string * int) list <json repr="object"> <ts repr="dict">;
*)
}

type alias = int list

type pair = (string * int)
