type kind = [
  | Root (* class name conflict *)
  | Thing of int
  | WOW <json name="wow">
  | Amaze <json name="!!!"> of string list
]

type root = {
  id <json name="ID">: string;
  await: bool;
  __init__: float;
  items: int list list;
  ?maybe: int option;
  ~extras: int list;
  ~answer <python default="42">: int;
  aliased: alias;
  point: (float * float);
  kinds: kind list;
  (* TODO:
  assoc: (string * int) list <json repr="object">;
  map: (string * int) list <json repr="object"> <python repr="dict">;
  *)
}

type alias = int list

type pair = (string * int)
